{"filter":false,"title":"112.py","tooltip":"/11p/112.py","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":72,"column":0},"action":"insert","lines":["# snippet-comment:[These are tags for the AWS doc team's sample catalog. Do not remove.]","# snippet-sourcedescription:[get_object.py demonstrates how to retrieve an object from an Amazon S3 bucket.]","# snippet-service:[s3]","# snippet-keyword:[Amazon S3]","# snippet-keyword:[Python]","# snippet-sourcesyntax:[python]","# snippet-sourcesyntax:[python]","# snippet-keyword:[Code Sample]","# snippet-sourcetype:[full-example]","# snippet-sourcedate:[2019-2-13]","# snippet-sourceauthor:[AWS]","","# Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.","#","# This file is licensed under the Apache License, Version 2.0 (the \"License\").","# You may not use this file except in compliance with the License. A copy of the","# License is located at","#","# http://aws.amazon.com/apache2.0/","#","# This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS","# OF ANY KIND, either express or implied. See the License for the specific","# language governing permissions and limitations under the License.","","import logging","import boto3","from botocore.exceptions import ClientError","","","def get_object(bucket_name, object_name):","    \"\"\"Retrieve an object from an Amazon S3 bucket","","    :param bucket_name: string","    :param object_name: string","    :return: botocore.response.StreamingBody object. If error, return None.","    \"\"\"","","    # Retrieve the object","    s3 = boto3.client('s3')","    try:","        response = s3.get_object(Bucket=bucket_name, Key=object_name)","    except ClientError as e:","        # AllAccessDisabled error == bucket or object not found","        logging.error(e)","        return None","    # Return an open StreamingBody object","    return response['Body']","","","def main():","    \"\"\"Exercise get_object()\"\"\"","","    # Assign these values before running the program","    test_bucket_name = 'BUCKET_NAME'","    test_object_name = 'OBJECT_NAME'","","    # Set up logging","    logging.basicConfig(level=logging.DEBUG,","                        format='%(levelname)s: %(asctime)s: %(message)s')","","    # Retrieve the object","    stream = get_object(test_bucket_name, test_object_name)","    if stream is not None:","        # Read first chunk of the object's contents into memory as bytes","        data = stream.read(amt=1024)","","        # Output object's beginning characters","        logging.info(f'{test_object_name}: {data[:60]}...')","","","if __name__ == '__main__':","    main()",""],"id":1}],[{"start":{"row":55,"column":0},"end":{"row":60,"column":25},"action":"remove","lines":["","    # Set up logging","    logging.basicConfig(level=logging.DEBUG,","                        format='%(levelname)s: %(asctime)s: %(message)s')","","    # Retrieve the object"],"id":2}]]},"ace":{"folds":[],"scrolltop":483.5,"scrollleft":0,"selection":{"start":{"row":55,"column":0},"end":{"row":55,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":33,"state":"qqstring3","mode":"ace/mode/python"}},"timestamp":1580041298263,"hash":"ad5e3aff77d89861081452db03d1aaaca5a8c3cf"}